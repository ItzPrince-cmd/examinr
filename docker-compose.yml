version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:latest
    container_name: examinr-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
      MONGO_INITDB_DATABASE: examinr
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - examinr-network

  # Redis Service (for caching)
  redis:
    image: redis:alpine
    container_name: examinr-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - examinr-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: examinr-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:adminpassword@mongodb:27017/examinr?authSource=admin
      JWT_SECRET: your-jwt-secret-change-in-production
      REDIS_URL: redis://redis:6379
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - examinr-network
    command: npm run dev

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: examinr-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_SOCKET_URL: http://localhost:5000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - examinr-network
    command: npm start

  # Nginx Service (Optional - for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: examinr-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - examinr-network

networks:
  examinr-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local